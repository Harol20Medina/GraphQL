"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TypedQueryDocumentAddonFactory = void 0;
const typescript_1 = __importDefault(require("typescript"));
const ts_ast_util_1 = require("../ts-ast-util");
const TypedQueryDocumentAddonFactory = ({ source }) => ({
    operationDefinition({ tsResultNode, tsVariableNode }) {
        const lhs = ts_ast_util_1.astf.createIdentifier(`${tsResultNode.name.text}Document`);
        const rhs = ts_ast_util_1.astf.createTypeReferenceNode(ts_ast_util_1.astf.createIdentifier('TypedQueryDocumentNode'), [
            ts_ast_util_1.astf.createTypeReferenceNode(ts_ast_util_1.astf.createIdentifier(tsResultNode.name.text)),
            ts_ast_util_1.astf.createTypeReferenceNode(ts_ast_util_1.astf.createIdentifier(tsVariableNode.name.text)),
        ]);
        const modifiers = [ts_ast_util_1.astf.createModifier(typescript_1.default.SyntaxKind.ExportKeyword)];
        const typeAliasDeclaration = ts_ast_util_1.astf.createTypeAliasDeclaration(modifiers, lhs, undefined, rhs);
        source.pushNamedImportIfNeeded('TypedQueryDocumentNode', 'graphql');
        source.pushStatement(typeAliasDeclaration);
    },
});
exports.TypedQueryDocumentAddonFactory = TypedQueryDocumentAddonFactory;
//# sourceMappingURL=typed-query-document.js.map